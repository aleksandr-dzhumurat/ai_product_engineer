version: '3.8'

services:
  mlflow:
    build:
      context: ./dockerfiles/mlflow
    depends_on:
      - minio
      - jupyter
    env_file:
      - .env
    volumes:
      - ./data/mlflow:/srv/mlflow
      - ./dockerfiles/mlflow/src:/srv/src
    container_name: mlflow_container_ui
    ports:
      - 8000:8000
    networks:
      - backtier_network
    command: >
      serve
  minio:
    build:
      context: ./dockerfiles/minio
    env_file:
      - .env
    volumes:
      - ./data/minio:/data
    networks:
      backtier_network:
        aliases:
          - backtier_s3
    container_name: backtier_s3
    ports:
      - 9001:9001
      - 9000:9000
  search:
    image: public.ecr.aws/zinclabs/zincsearch:0.4.10
    container_name: zincsearch
    environment:
      - ZINC_DATA_PATH=/data
      - ZINC_FIRST_ADMIN_USER=admin
      - ZINC_FIRST_ADMIN_PASSWORD=admin
    volumes:
      - ./data/zinc_data:/data
    ports:
      - "4080:4080"
    networks:
      - backtier_network
  api:
    build:
      context: .
      dockerfile: ./dockerfiles/api/Dockerfile
    depends_on:
      - search
    env_file:
      - .env
    volumes:
      - ./data:/data
      - ./src:/srv/ml_tools
      - ./configs:/srv/configs
      - ./dockerfiles/api/src:/srv/src
    ports:
      - "8000:8000"
    networks:
      backtier_network:
        aliases:
          - api
    container_name: api
  tg_bot:
    build:
      context: .
      dockerfile: ./dockerfiles/tg_backend/Dockerfile
    env_file:
      - .env
    volumes:
      - ./data:/data
      - ./src:/srv/ml_tools
      - ./configs:/srv/configs
      - ./dockerfiles/tg_backend/src:/srv/src
    depends_on:
      - api
    networks:
      backtier_network:
        aliases:
          - tg_bot
    container_name: tg_bot
  jupyter:
    build:
      context: .
      dockerfile: ./dockerfiles/sagemaker/Dockerfile
    env_file:
      - .env
    volumes:
      - ./data:/opt/ml/data
      - ./src:/opt/ml/code
      - ./jupyter_notebooks:/opt/ml/jupyter_notebooks
      - ./configs:/opt/ml/configs
    ports:
      - "9999:8899"
    networks:
      - backtier_network
    container_name: jupyter_notebook
    command: jupyter
networks:
  backtier_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450